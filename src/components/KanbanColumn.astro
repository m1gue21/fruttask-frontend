---
// src/components/KanbanColumn.astro

import KanbanCard from "./KanbanCard.astro";
import Modal from "./Modal.astro";

const { id, color, title, tasksStatus } = Astro.props;


let token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1pZ3VlZnJlZWFnZW50QGdtYWlsLmNvbSIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNzIyMDEyOTAzLCJleHAiOjE3MjIwOTkzMDN9.da1cUVsXKVl-LiHl1LXtFxP-sO66iWzq2LbfZlc-BIs'

const createFields = [
  { id: "title", type: "text", placeholder: "Title", label: "Title", required: true },
  { id: "description", type: "textarea", placeholder: "Description", label: "Description", required: true }
];

 let tasks = []

 try {
  const response = await fetch(`http://localhost:3000/api/v1/tasks/by-status/${tasksStatus}`, {
        headers: {
          'Authorization': `Bearer ${token}` 
        }
      });
      if (!response.ok) throw new Error('Failed to fetch tasks');
      let fetchedTasks = await response.json();
      tasks = fetchedTasks
      console.log(`${tasksStatus} tasks:`, tasks)


    } catch (error) {
      console.error('Error:', error.message);
    }
---


<div class="bg-white rounded px-2 py-2 movable-items max-w-">
  <div class="flex flex-row justify-between items-center mb-2 mx-1">
    <div class="flex items-center">
      <h2 class={`text-sm w-max px-1 rounded mr-2 text-gray-700 ${color}`}>
        {title}
      </h2>
      <p class="text-gray-400 text-sm">{tasks.length}</p>
    </div>
    <button onclick={`document.getElementById('dialog-create-${id}').showModal()`} class="flex items-center text-gray-300">
      <p class="text-2xl transition ease-in-out delay-150 text-blue-500 hover:-translate-y-1 hover:scale-110 hover:text-indigo-500 duration-300 cursor-pointer">+</p>
    </button>
  </div>
  {tasks.map(task => (
    <KanbanCard id={task.id} task={task} statusColor={color}  />
  ))}
  
  <!-- Botón para añadir nueva tarea -->
  <!-- <button onclick={`document.getElementById('dialog-create-${id}').showModal()`}
    class="transition ease-in-out delay-150 bg-blue-500 hover:-translate-y-1 hover:scale-110 hover:bg-indigo-500 duration-300 flex flex-row items-center rounded mt-2 pb-1 px-4 w-min hover:cursor-pointer text-white">
    <p class="rounded mr-2 text-2xl">+</p>
    <p class="rounded pt-1 ml-2 text-sm">New</p>
  </button> -->

  <!-- Modal para crear nueva tarea -->
  <Modal id={`dialog-create-${id}`} title="Create Task" formType="create-task" fields={createFields}>
  </Modal>
</div>
